---
- name: Make sure snapd is installed
  apt:
    pkg:
      - snapd
    state: present
  become: yes
  when: ansible_distribution == 'Ubuntu'

- name: Install microk8s
  become: yes
  snap:
    name: microk8s
    classic: yes
    channel: "{{ microk8s_version }}"

- name: Wait for microk8s to be ready
  become: yes
  command: microk8s.status --wait-ready
  changed_when: false
  register: mk8sstatusout
  failed_when:
      - "'This MicroK8s deployment is acting as a node in a cluster.' not in mk8sstatusout.stdout_lines"
      - mk8sstatusout.rc > 0

- name: Create kubectl alias
  become: yes
  command: "snap alias microk8s.kubectl kubectl"
  changed_when: false
  register: aliaskubectlout

- name: Create custom certificates
  become: yes
  ansible.builtin.template:
    src: "{{ microk8s_csr_template }}"
    dest: /var/snap/microk8s/current/certs/csr.conf.template
    mode: 0644
  when: microk8s_csr_template is defined and microk8s_csr_template is file
  notify:
  - Refresh certs

- name: Create folder for microk8s certificates
  become: yes
  file:
    path: /usr/share/ca-certificates/extra
    state: directory
    mode: 0755

- name: Copy certificates
  become: yes
  copy:
    src: "{{ item }}"
    dest: /usr/share/ca-certificates/extra
    remote_src: yes
    force: yes
    mode: 0644
  with_fileglob:
    - /var/snap/microk8s/current/certs/*ca*.crt

- name: Trust certificates generated by microk8s
  become: yes
  command: "update-ca-certificates"
  register: command_result
  changed_when: "'0 added, 0 removed' not in command_result.stdout"

- name: Disable snap autoupdate
  become: true
  blockinfile:
    dest: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED: microk8s Disable snap autoupdate"
    content: |
      127.0.0.1 api.snapcraft.io

- name: add user to group
  become: yes
  command: "usermod -a -G microk8s {{ user }}"
  changed_when: true
  with_items: '{{ users }}'
  loop_control:
    loop_var: user
    label: '{{ user }}'

- name: Create .kube folder for the user
  become: yes
  become_user: '{{ user }}'
  file:
    path: ~/.kube
    state: directory
    owner: '{{ user }}'
    group: '{{ user }}'
    mode: 0750
  with_items: '{{ users }}'
  loop_control:
    loop_var: user
    label: '{{ user }}'

- name: create kubectl config
  become: yes
  changed_when: true
  shell: microk8s config > /home/{{ user }}/.kube/config
  args:
    executable: /bin/bash
  with_items: '{{ users }}'
  loop_control:
    loop_var: user
    label: '{{ user }}'

- name: reaffirm permission on files
  become: yes
  file:
    path: ~/.kube
    state: directory
    owner: '{{ user }}'
    group: '{{ user }}'
    recurse: yes
    mode: 0750
  with_items: '{{ users }}'
  loop_control:
    loop_var: user
    label: '{{ user }}'

- name: add helm repository to user
  become: yes
  become_user: '{{ item.0 }}'
  shell: "microk8s.helm repo add {{ item.1.name }} {{ item.1.url }}"
  args:
    executable: /bin/bash
  changed_when: true
  with_nested:
    - "{{ users }}"
    - "{{ helm3_repositories }}"

- name: update helm repos
  become: yes
  become_user: '{{ user }}'
  shell: "microk8s.helm repo update"
  args:
    executable: /bin/bash
  changed_when: true
  with_items: '{{ users }}'
  loop_control:
    loop_var: user
    label: '{{ user }}'
